#!/bin/bash

set -e

PLATFORMS=("--firecracker" "--vm" "--metal")
IPERF_UDP_ARGS=""
TEST_TYPE="bandwidth"

if [[ ! " ${PLATFORMS[@]} " =~ " $1 " ]]; then
    echo "Provided argument '$1' is not a valid platform. Please give one of ${PLATFORMS[@]}"
    exit 1
fi

if [[ "$2" == "--udp" ]]; then
    IPERF_UDP_ARGS="-u "
    TEST_TYPE="jitter"
fi

PLATFORM_ARG="$1"
PLATFORM=${PLATFORM_ARG:2}

printf "Selected platform: $PLATFORM\n"

ITERATIONS=10
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
OUTPUT_DIR=$DIR/output
DATETIME=$(date +%Y-%m-%dT%H:%M:%S%z)
LOGFILE_NAME=$OUTPUT_DIR/$DATETIME-$PLATFORM-$TEST_TYPE.log

SSH_USER=perttu
SSH_HOST=dogentu
IPERF_PORT=5201
SSH_ARGS="-i ~/.ssh/id_rsa_dogentu"
if [[ "$PLATFORM" == "vm" ]]; then
    SSH_HOST=vm1
fi

launch_server() {
    # Launch server in the remote host
    ssh $SSH_ARGS $SSH_USER@$SSH_HOST /bin/bash <<EOF
LOGS_DIR=\$(pwd)/logs
mkdir -p \$LOGS_DIR
LOGFILE=\$LOGS_DIR/$DATETIME-$PLATFORM-$TEST_TYPE.log
iperf3 -s -D -J --logfile \$LOGFILE --port $IPERF_PORT
EOF
}

stop_server() {
    ssh $SSH_ARGS $SSH_USER@$SSH_HOST /bin/bash <<EOF
kill -2 \$(ps aux | grep 'iperf3 -s' | awk 'NR==1{print \$2}')
EOF
}

run_test() {
    printf "["
    for ((i=1; i<=$ITERATIONS;i++)); do
        iperf3 -c $SSH_HOST ${IPERF_UDP_ARGS}-J --port $IPERF_PORT
        if [ "$i" != "$ITERATIONS" ]; then
            echo ", "
        fi
    done
    printf "]"
}


printf "Launching the server...\n"
launch_server
printf "Server $SSH_HOST up. Running tests...\n"

sleep 5

run_test &> $LOGFILE_NAME

printf "Tests finished. Cleaning up server...\n"

stop_server
printf "All done.\n"
