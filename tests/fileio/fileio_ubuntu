#!/bin/bash

set -e

PLATFORMS=("--firecracker" "--vm" "--metal")

if [[ ! " ${PLATFORMS[@]} " =~ " $1 " ]]; then
    printf "Provided argument '$1' is not a valid platform. Please give one of ${PLATFORMS[@]}"
    exit 1
fi

PLATFORM_ARG="$1"
PLATFORM=${PLATFORM_ARG:2}

printf "Selected platform: $PLATFORM"

ITERATIONS=10
TEST_TIME=30
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
OUTPUT_DIR=$DIR/output
DATETIME=$(date +%Y-%m-%dT%H:%M:%S%z)
LOGFILE_NAME=$OUTPUT_DIR/$DATETIME-$PLATFORM-fileio.log
TMPDIR=/tmp/fileio-test
FILE_SIZE_TOTAL=5G

mkdir -p $TMPDIR
pushd $TMPDIR

run_test() {
    test_mode=$1
    for ((i=1; i<=$ITERATIONS;i++)); do
        sysbench fileio run --file-total-size=$FILE_SIZE_TOTAL --file-test-mode=$test_mode --time=$TEST_TIME
        # sysbench fileio run --file-total-size=$FILE_SIZE_TOTAL --file-test-mode=$test_mode --time=$TEST_TIME
    done
}

run_all_tests() {
    run_test seqrd
    run_test seqwr
}

printf "\nPreparing sysbench test...\n"

sysbench fileio prepare --file-total-size=$FILE_SIZE_TOTAL

printf "\nPreparations done. Running tests...\n"

run_all_tests &> $LOGFILE_NAME

popd

printf "\nTests done. Cleaning up...\n"

rm -rf $TMPDIR

printf "\nFinished.\n"
