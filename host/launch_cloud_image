#!/bin/bash

set -e

# Guest name
default_guest=vm1
# Guest RAM
default_ram=3934
# Guest disk size (GB)
default_disk=30
# Allocated CPUs to guest
default_vcpu=4
# Default console
default_tty=pty0

GUEST_NAME=${GUEST_NAME:-$default_guest}
GUEST_RAM=${GUEST_RAM:-$default_ram}
GUEST_DISK=${GUEST_DISK:-$default_disk}
GUEST_VCPU=${GUEST_VCPU:-$default_vcpu}
GUEST_TTY=${GUEST_TTY:-$default_tty}
PUBLIC_KEY=~/.ssh/id_ed25519.pub
CACHE_PATH=~/.cache/guestvm
LIBVIRT_IMAGES_PATH=/var/lib/libvirt/images
DISK_FILE=focal-server-cloudimg-arm64.img
DISK_FILE_QCOW2=ubuntu-20.04.qcow2
USER_DATA_IMAGE=$LIBVIRT_IMAGES_PATH/$GUEST_NAME-cidata.iso

mkdir -p $CACHE_PATH

if [ ! -f $CACHE_PATH/$DISK_FILE ]; then
    echo "Existing ubuntu disk image not found, downloading one..."
    pushd $CACHE_PATH
    # wget http://releases.ubuntu.com/20.04/$DISK_FILE
    wget https://cloud-images.ubuntu.com/focal/current/$DISK_FILE
    popd
fi

CACHE_DIR=/home/$USER/.cache
sudo setfacl -m  u:libvirt-qemu:rwx $CACHE_DIR

sudo cp -n $CACHE_PATH/$DISK_FILE $LIBVIRT_IMAGES_PATH/$DISK_FILE_QCOW2
sudo chown libvirt-qemu:kvm $LIBVIRT_IMAGES_PATH/$DISK_FILE_QCOW2

echo "Creating disk file for the guest based on backing file..."

GUEST_DISK_FILE=$LIBVIRT_IMAGES_PATH/$GUEST_NAME.qcow2

sudo qemu-img create -f qcow2 \
    -o backing_file=$LIBVIRT_IMAGES_PATH/$DISK_FILE_QCOW2,backing_fmt=qcow2 \
    $GUEST_DISK_FILE

echo "Resizing to ${GUEST_DISK}GB..."

sudo qemu-img resize $GUEST_DISK_FILE ${GUEST_DISK}G

echo "Setting up cloud-init configs..."

pushd $CACHE_PATH

PUBLIC_KEY_CONTENTS=$(cat $PUBLIC_KEY)

cat >meta-data <<EOF
local-hostname: $GUEST_NAME
EOF

cat >user-data <<EOF
#cloud-config

users:
  - name: perttu
    ssh-authorized-keys:
      - $PUBLIC_KEY_CONTENTS
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    shell: /bin/bash

ssh:
  install-server: yes
  authorized-keys:
    - $PUBLIC_KEY_CONTENTS

runcmd:
  - echo "AllowUsers perttu" >> /etc/ssh/sshd_config
  - restart ssh
EOF

sudo genisoimage -output $USER_DATA_IMAGE \
    -volid cidata \
    -joliet \
    -rock user-data meta-data

popd

virt-install --connect qemu:///system \
    --name $GUEST_NAME \
    --memory $GUEST_RAM \
    --vcpus $GUEST_VCPU \
    --cpu host \
    --virt-type kvm \
    --disk path=$GUEST_DISK_FILE,format=qcow2 \
    --disk $USER_DATA_IMAGE,device=cdrom \
    --import \
    --noautoconsole \
    --graphics none \
    --network network=host-bridge \
    --console tty0 --console ttyS0,115200n8 \
    --os-variant ubuntu20.04
